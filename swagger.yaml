openapi: 3.0.0
info:
  title: Job-API
  contact: {}
  version: '1.0'
servers:
  - url: http://localhost:5000/api/v1
    variables: {}
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: login
      operationId: login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/loginrequest'
                - example:
                    email: fardil@gmail.com
                    password: fardil
            example:
              email: fardil@gmail.com
              password: fardil
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /auth/register:
    post:
      tags:
        - auth
      summary: register
      operationId: register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/registerrequest'
                - example:
                    name: fard
                    email: fard@gmail.com
                    password: fardil
            example:
              name: fard
              email: fard@gmail.com
              password: fardil
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    get:
      tags:
        - jobs
      summary: get all jobs
      operationId: getalljobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    post:
      tags:
        - jobs
      summary: create job
      operationId: createjob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/createjobrequest'
                - example:
                    company: Madani
                    position: Mobile Developer
            example:
              company: Madani
              position: Mobile Developer
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    summary: Get a job by ID
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: String ID of the job to get
    get:
      tags:
        - jobs
      summary: get job
      operationId: getjob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []

    patch:
      tags:
        - jobs
      summary: update job
      operationId: updatejob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/updatejobrequest'
                - example:
                    status: interview
            example:
              status: interview
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []

    delete:
      tags:
        - jobs
      summary: delete job
      operationId: deletejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    loginrequest:
      title: loginrequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: fardil@gmail.com
        password: fardil
    registerrequest:
      title: registerrequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: fard
        email: fard@gmail.com
        password: fardil
    createjobrequest:
      title: createjobrequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Madani
        position: Mobile Developer
    updatejobrequest:
      title: updatejobrequest
      required:
        - status
      type: object
      properties:
        status:
          type: string
      example:
        status: interview
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: auth
  - name: jobs
